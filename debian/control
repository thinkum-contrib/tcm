Source: tcm
Section: graphics
Priority: optional
Maintainer: Debian QA Group <packages@qa.debian.org>
Build-Depends:
 debhelper (>= 9),
 dpatch,
 libmotif-dev,
 libxt-dev,
 bison,
 flex,
 libxau-dev,
Standards-Version: 3.7.2

Package: tcm
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, transfig
Suggests: xfonts-scalable
Description: Toolkit for Conceptual Modeling (TCM)
 The Toolkit for Conceptual Modeling is a collection of software tools
 to present conceptual models of software systems in the form of
 diagrams, tables, trees, and the like. A conceptual model of a system
 is a structure used to represent the requirements or architecture of
 the system. TCM is meant to be used for specifying and maintaining
 requirements for desired systems, in which a number of techniques and
 heuristics for problem analysis, function refinement, behavior
 specification, and architecture specification are used.  TCM takes
 the form of a suite of graphical editors that can be used in these
 design tasks. These editors can be categorized
 into: 
 .
  * Generic editors for generic diagrams, generic tables and generic
    trees.
  * Structured Analysis (SA) editors for entity-relationship diagrams,
    data and event flow diagrams, state transition diagrams, function
    refinement trees, transaction-use tables and function-entity type
    tables. 
  * Unified Modeling Language (UML) editors for static structure
    diagrams, use-case diagrams, activity diagrams, state charts, message 
    sequence diagrams, collaboration diagrams, component diagrams and
    deployment diagrams (only the first three UML and last two editors
    are functional at this moment). 
  * Miscellaneous editors such as for JSD (process structure and
    network diagrams), recursive process graphs and transaction decomposition
    tables. 
 .
 TCM supports constraint checking for single documents (e.g. name
 duplication and cycles in is-a relationships). TCM distinguishes
 built-in constraints (of which a violation cannot even be attempted)
 from immediate constraints (of which an attempted violation is
 immediately prevented) and soft constraints (against which the editor
 provides a warning when it checks the drawing). TCM is planned to
 support hierarchic graphs, so that it can handle for example
 hierarchic statecharts. Features to be added later
 include constraint checking across documents and executable models. 

Package: tcm-doc
Section: doc
Architecture: all 
Depends: ${misc:Depends}
Description: Documentation for Toolkit for Conceptual Modeling (TCM)
 The Toolkit for Conceptual Modeling is a collection of software tools
 to present conceptual models of software systems in the form of
 diagrams, tables, trees, and the like. A conceptual model of a system
 is a structure used to represent the requirements or architecture of
 the system. TCM is meant to be used for specifying and maintaining
 requirements for desired systems, in which a number of techniques and
 heuristics for problem analysis, function refinement, behavior
 specification, and architecture specification are used.  TCM takes
 the form of a suite of graphical editors that can be used in these
 design tasks. These editors can be categorized
 into: 
 .
  * Generic editors for generic diagrams, generic tables and generic
    trees.
  * Structured Analysis (SA) editors for entity-relationship diagrams,
    data and event flow diagrams, state transition diagrams, function
    refinement trees, transaction-use tables and function-entity type
    tables. 
  * Unified Modeling Language (UML) editors for static structure
    diagrams, use-case diagrams, activity diagrams, state charts, message 
    sequence diagrams, collaboration diagrams, component diagrams and
    deployment diagrams (only the first three UML and last two editors
    are functional at this moment). 
  * Miscellaneous editors such as for JSD (process structure and
    network diagrams), recursive process graphs and transaction decomposition
    tables. 
 .
 TCM supports constraint checking for single documents (e.g. name
 duplication and cycles in is-a relationships). TCM distinguishes
 built-in constraints (of which a violation cannot even be attempted)
 from immediate constraints (of which an attempted violation is
 immediately prevented) and soft constraints (against which the editor
 provides a warning when it checks the drawing). TCM is planned to
 support hierarchic graphs, so that it can handle for example
 hierarchic statecharts. Features to be added later
 include constraint checking across documents and executable models. 
 .
 This package contains all the documentation that comes in the original
 tarball.
